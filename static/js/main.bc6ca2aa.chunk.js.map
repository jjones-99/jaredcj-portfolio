{"version":3,"sources":["styles/AppStyles.ts","components/Cursor/CursorStyles.ts","components/Cursor/Cursor.tsx","utils/constants.ts","components/Footer/FooterStyles.ts","components/Footer/Footer.tsx","utils/helpers.ts","components/Navbar/ThinNavbarStyles.ts","components/Navbar/ThinNavbar.tsx","components/Navbar/WideNavbarStyles.ts","components/Navbar/WideNavbar.tsx","components/Header/HeaderStyles.ts","components/Header/Header.tsx","components/Hero/HeroStyles.ts","components/Hero/Hero.tsx","components/Playground/PlaygroundStyles.ts","components/Playground/PlayCard.tsx","models/PlayItems.ts","components/Playground/Playground.tsx","components/Preloader/PreloaderStyles.ts","components/Preloader/Preloader.tsx","components/Work/WorkStyles.ts","components/Work/WorkCard.tsx","models/WorkItems.ts","components/Work/Work.tsx","styles/theme.js","components/Particles/ParticleStyles.ts","components/Particles/ParticleBackground.tsx","components/AboutMe/AboutMeStyles.ts","components/AboutMe/AboutMe.tsx","components/Contact/ContactStyles.ts","components/Contact/ContactForm.tsx","components/Contact/ContactThankYou.tsx","components/Contact/Contact.tsx","App.tsx","index.tsx"],"names":["ScreenOverlay","styled","div","SectionHeader","header","SectionTitle","h2","theme","fontTitle","SectionSubtitle","h6","fontSubtitle","PrimaryButtonLink","a","fontText","light","colorPrimary","PrimaryButton","button","IconButton","CursorDiv","Cursor","URL_LINKEDIN","URL_GITHUB","URL_CODEPEN","URL_RESUME","FooterContainer","footer","colorBackgroundDark","FooterTopContainer","FooterTop","FooterSocials","ul","FooterSocial","li","FooterLink","FooterCopy","fontAside","FooterCredits","FooterCredit","Footer","year","Date","getFullYear","href","target","rel","setOverlayOpacity","opacity","overlayElement","document","getElementById","style","toggleBodyScrolling","enable","bodyElement","querySelector","classList","remove","add","ThinNavbarMenu","colorMenuBackground","ThinNavbarHeader","ThinNavbarNav","nav","ThinNavbarItem","ThinNavbarSocials","ThinNavbarSocial","ThinNavbar","setRenderContactForm","React","useContext","AppContext","useState","renderMenu","setRenderMenu","useEffect","onClick","title","className","WideNavbarNav","WideNavbarItem","WideNavbar","HeaderContainer","HeaderHome","navbarMediaQuery","window","matchMedia","Header","matches","isThinScreen","setIsThinScreen","addEventListener","HeroContainer","section","LandingTitle","h1","fontDecor","textShadow","Hero","p","PLAYGROUND_CARD_BORDER_RADIUS","PlaygroundContainer","sectionSpacerHeight","PlaygroundGrid","PlaygroundCard","article","imageSrc","boxShadow","PlaygroundCardBackgroundMask","PlaygroundCardHeader","PlaygroundCardTitle","h3","PlaygroundCardLinks","PlaygroundCardLink","hoverMediaQuery","PlayCard","item","canHover","setCanHover","card","thumbnailSrc","codepenLink","githubLink","options","scale","PLAY_ITEMS","time","gallerySrcs","description","tags","Playground","id","map","PreloaderDiv","Preloader","clearPreloader","interval","useRef","undefined","current","setInterval","clearInterval","WorkContainer","WorkCardGrid","WorkCardContainer","colorCardBackground","WorkCardContent","WorkCardBody","WorkDetailsCard","WorkDetailsHeader","WorkDetailsTitle","WorkDetailsBody","WorkCard","showModal","setShowModal","moreDetails","summary","buttonOption","buttonLink","hook","WORK_ITEMS","role","demoLink","Work","FONT_FAMILY_PRIMARY","FONT_FAMILY_SECONDARY","COLOR_PRIMARY_LIGHT","COLOR_PRIMARY","COLOR_PRIMARY_DARK","colorPrimaryLight","colorPrimaryDark","colorTitle","colorSubtitle","colorText","colorEmphasis","colorMuted","colorBackgroundLight","fontMuted","fontButton","ParticleBackgroundWrapper","PARTICLE_OPTIONS","fpsLimit","particles","color","value","links","move","direction","outMode","random","speed","straight","number","density","value_area","shape","type","size","detectRetina","ParticleBackground","height","AboutMeContainer","AboutMeMain","AboutMeBody","AboutMeSections","AboutMeSection","AboutMeHeader","h5","AboutMeTopic","AboutMeInfo","AboutMe","ContactFormContainer","visible","ContactFormElement","form","ContactFormHeader","ContactFormFieldset","fieldset","ContactFormRow","ContactFormField","ContactFormLabel","label","ContactFormInput","input","ContactFormTextarea","textarea","ContactFormFooter","ContactFormBody","ContactFormCard","ContactForm","props","userName","setUserName","userEmail","setUserEmail","userMessage","setUserMessage","onContactSubmit","useCallback","e","preventDefault","fetch","method","headers","body","JSON","stringify","_subject","_template","name","email","message","onComplete","onSubmit","htmlFor","required","onChange","ContactThankYou","Contact","renderThankYou","setRenderThankYou","renderContactForm","cardClass","createContext","App","preloader","setPreloader","defaultContext","Provider","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bc6ca2aa.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n/**\r\n * Reusable styles for the entire app.\r\n */\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 95%;\r\n  margin: 0 auto;\r\n\r\n  @media only screen and (min-width: 480px) {\r\n    width: 95%;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    width: 90%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1024px) {\r\n    width: 1000px;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    width: 1170px;\r\n  }\r\n`;\r\n\r\nexport const ScreenOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 999;\r\n  background: black;\r\n  opacity: 0;\r\n  pointer-events: none;\r\n\r\n  transition: opacity 500ms ease-in-out;\r\n`;\r\n\r\nexport const SectionHeader = styled.header`\r\n  place-items: center;\r\n  text-align: center;\r\n  padding-top: 3rem;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n  font: ${({ theme }) => theme.fontTitle};\r\n  font-weight: 600;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nexport const SectionSubtitle = styled.h6`\r\n  font: ${({ theme }) => theme.fontSubtitle};\r\n  font-size: 0.75rem;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const PrimaryButtonLink = styled.a<{ light?: boolean }>`\r\n  font: ${({ theme }) => theme.fontText};\r\n  font-size: 1em;\r\n  font-weight: 500;\r\n  line-height: calc(1em * 2);\r\n  text-decoration: none;\r\n  color: ${({ light, theme }) => (light ? theme.colorPrimary : \"white\")};\r\n\r\n  padding: 0.7em 2em;\r\n  border-radius: 100000px;\r\n  border: none;\r\n  background-color: ${({ light, theme }) => (light ? \"white\" : theme.colorPrimary)};\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: ${({ light, theme }) => (light ? theme.colorPrimary : \"white\")};\r\n    filter: brightness(85%);\r\n  }\r\n`;\r\n\r\nexport const PrimaryButton = styled.button<{ light?: boolean }>`\r\n  font: ${({ theme }) => theme.fontText};\r\n  font-size: 1em;\r\n  font-weight: 500;\r\n  line-height: calc(1em * 2);\r\n  color: ${({ light, theme }) => (light ? theme.colorPrimary : \"white\")};\r\n\r\n  padding: 0.2em 2em;\r\n  border-radius: 100000px;\r\n  border: none;\r\n  background-color: ${({ light, theme }) => (light ? \"\" : theme.colorPrimary)};\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: ${({ light, theme }) => (light ? theme.colorPrimary : \"white\")};\r\n    filter: brightness(85%);\r\n  }\r\n`;\r\n\r\nexport const IconButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  font-size: 2em;\r\n`;\r\n\r\n// Merely for copying common breakpoints.\r\nconst Breakpoints = styled.div`\r\n  @media only screen and (min-width: 480px) {\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n  }\r\n\r\n  @media only screen and (min-width: 1024px) {\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CursorDiv = styled.div``;\r\n","import React from \"react\";\r\nimport { CursorDiv } from \"./CursorStyles\";\r\n\r\n/**\r\n * Represents a custom cursor for the site.\r\n * Replaces the default cursor.\r\n */\r\nconst Cursor = () => {\r\n  return <CursorDiv></CursorDiv>;\r\n};\r\n\r\nexport default Cursor;\r\n","export const URL_LINKEDIN: string = \"https://www.linkedin.com/in/jaredcj/\";\r\nexport const URL_GITHUB: string = \"https://github.com/jjones-99\";\r\nexport const URL_CODEPEN: string = \"https://codepen.io/jaredcj\";\r\n\r\nexport const URL_RESUME: string = \"/Resume%20JJones%2010-10-2021.pdf\";\r\n","import styled from \"styled-components\";\r\n\r\nexport const FooterContainer = styled.footer`\r\n  background-color: ${({ theme }) => theme.colorBackgroundDark};\r\n  color: white;\r\n  padding: 8rem 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FooterTopContainer = styled.div`\r\n  margin-bottom: 2rem;\r\n\r\n  @media only screen and (min-width: 480px) {\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nexport const FooterTop = styled.a`\r\n  text-decoration: none;\r\n  color: white;\r\n  font: ${({ theme }) => theme.fontSubtitle};\r\n  font-size: 1.5rem;\r\n\r\n  &:active,\r\n  &:hover {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport const FooterSocials = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  margin-bottom: 1em;\r\n  text-align: center;\r\n`;\r\n\r\nexport const FooterSocial = styled.li`\r\n  margin-bottom: 1rem;\r\n\r\n  &:last-child {\r\n    margin-right: 0;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  @media only screen and (min-width: 480px) {\r\n    display: inline-block;\r\n    margin-right: 4rem;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const FooterLink = styled.a`\r\n  font: ${({ theme }) => theme.fontSubtitle};\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  color: white;\r\n  text-align: center;\r\n\r\n  &:active,\r\n  &:hover {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport const FooterCopy = styled.div`\r\n  font: ${({ theme }) => theme.fontAside};\r\n  font-size: 0.8rem;\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nexport const FooterCredits = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport const FooterCredit = styled.li`\r\n  font: ${({ theme }) => theme.fontAside};\r\n  font-size: 0.65rem;\r\n  font-style: italic;\r\n  margin-bottom: 1rem;\r\n\r\n  &:last-child {\r\n    margin-right: 0;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  @media only screen and (min-width: 480px) {\r\n    display: inline-block;\r\n    margin-right: 4rem;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  & a {\r\n    color: white;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { URL_CODEPEN, URL_GITHUB, URL_LINKEDIN, URL_RESUME } from \"../../utils/constants\";\r\nimport {\r\n  FooterContainer,\r\n  FooterCopy,\r\n  FooterCredit,\r\n  FooterCredits,\r\n  FooterSocial,\r\n  FooterLink,\r\n  FooterSocials,\r\n  FooterTop,\r\n  FooterTopContainer,\r\n} from \"./FooterStyles\";\r\n\r\n/**\r\n * Represents the footer of the portfolio.\r\n */\r\nconst Footer = () => {\r\n  const year = new Date().getFullYear();\r\n\r\n  return (\r\n    <FooterContainer>\r\n      <FooterTopContainer>\r\n        <FooterTop href=\"#top\">Jared Jones</FooterTop>\r\n      </FooterTopContainer>\r\n      <FooterCopy>\r\n        <FooterLink href={URL_RESUME} target=\"_blank\">\r\n          View my resume\r\n        </FooterLink>\r\n      </FooterCopy>\r\n      <FooterSocials>\r\n        <FooterSocial>\r\n          <FooterLink href={URL_LINKEDIN} target=\"_blank\" rel=\"noreferrer\">\r\n            LinkedIn\r\n          </FooterLink>\r\n        </FooterSocial>\r\n        <FooterSocial>\r\n          <FooterLink href={URL_GITHUB} target=\"_blank\" rel=\"noreferrer\">\r\n            GitHub\r\n          </FooterLink>\r\n        </FooterSocial>\r\n        <FooterSocial>\r\n          <FooterLink href={URL_CODEPEN} target=\"_blank\" rel=\"noreferrer\">\r\n            CodePen\r\n          </FooterLink>\r\n        </FooterSocial>\r\n      </FooterSocials>\r\n      <FooterCopy>© {year} Jared Jones - WIP</FooterCopy>\r\n      <FooterCredits>\r\n        <FooterCredit>\r\n          Icons by{\" \"}\r\n          <a href=\"https://fontawesome.com\" target=\"_blank\" rel=\"noreferrer\">\r\n            Font Awesome\r\n          </a>{\" \"}\r\n        </FooterCredit>\r\n      </FooterCredits>\r\n    </FooterContainer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const setOverlayOpacity = (opacity: string) => {\r\n  const overlayElement = document.getElementById(\"mainOverlay\");\r\n  if (!overlayElement) return;\r\n  overlayElement.style.opacity = opacity;\r\n};\r\n\r\nexport const toggleBodyScrolling = (enable: boolean) => {\r\n  const bodyElement = document.querySelector(\"body\");\r\n  if (!bodyElement) return;\r\n  if (enable) {\r\n    bodyElement.classList.remove(\"disabled-scrolling\");\r\n  } else {\r\n    bodyElement.classList.add(\"disabled-scrolling\");\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ThinNavbarMenu = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: ${({ theme }) => theme.colorMenuBackground};\r\n  height: 100vh;\r\n`;\r\n\r\nexport const ThinNavbarHeader = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  padding: 0.75rem 3rem 0.75rem 0.75rem;\r\n  height: 8%;\r\n`;\r\n\r\nexport const ThinNavbarNav = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 78%;\r\n  padding: 30% 30px 60% 30px;\r\n`;\r\n\r\nexport const ThinNavbarItem = styled.a`\r\n  padding-right: 0.5rem;\r\n  font: ${({ theme }) => theme.fontText};\r\n  color: black;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  font-size: 3rem;\r\n  margin-bottom: 1rem;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const ThinNavbarSocials = styled.ul`\r\n  list-style: none;\r\n  height: 16%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin: 0;\r\n  padding: 0 6rem;\r\n`;\r\n\r\nexport const ThinNavbarSocial = styled.li`\r\n  font-size: 2rem;\r\n  a {\r\n    text-decoration: none;\r\n    color: black;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../../App\";\r\nimport { IconButton } from \"../../styles/AppStyles\";\r\nimport { URL_CODEPEN, URL_GITHUB, URL_LINKEDIN } from \"../../utils/constants\";\r\nimport { toggleBodyScrolling } from \"../../utils/helpers\";\r\nimport {\r\n  ThinNavbarHeader,\r\n  ThinNavbarItem,\r\n  ThinNavbarMenu,\r\n  ThinNavbarNav,\r\n  ThinNavbarSocial,\r\n  ThinNavbarSocials,\r\n} from \"./ThinNavbarStyles\";\r\n\r\n/**\r\n * Represents site navigation for the portfolio.\r\n */\r\nconst ThinNavbar: React.FC = () => {\r\n  const { setRenderContactForm } = React.useContext(AppContext);\r\n  const [renderMenu, setRenderMenu] = useState(false);\r\n\r\n  useEffect(() => {\r\n    toggleBodyScrolling(!renderMenu);\r\n  }, [renderMenu]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={() => setRenderMenu(true)} title=\"Open menu\">\r\n        <i className=\"fas fa-bars\" />\r\n      </IconButton>\r\n      {renderMenu && (\r\n        <ThinNavbarMenu>\r\n          <ThinNavbarHeader>\r\n            <IconButton onClick={() => setRenderMenu(false)} title=\"Close menu\">\r\n              <i className=\"fas fa-times\" />\r\n            </IconButton>\r\n          </ThinNavbarHeader>\r\n          <ThinNavbarNav>\r\n            <ThinNavbarItem onClick={() => setRenderMenu(false)} href=\"#aboutme\">\r\n              About Me\r\n            </ThinNavbarItem>\r\n            <ThinNavbarItem\r\n              className=\"hide-on-hoverless\"\r\n              onClick={() => setRenderMenu(false)}\r\n              href=\"#work\"\r\n            >\r\n              Work\r\n            </ThinNavbarItem>\r\n            <ThinNavbarItem\r\n              className=\"hide-on-hoverless\"\r\n              onClick={() => setRenderMenu(false)}\r\n              href=\"#playground\"\r\n            >\r\n              Playground\r\n            </ThinNavbarItem>\r\n            <ThinNavbarItem\r\n              onClick={() => {\r\n                setRenderMenu(false);\r\n                setRenderContactForm!(true);\r\n              }}\r\n            >\r\n              Contact\r\n            </ThinNavbarItem>\r\n          </ThinNavbarNav>\r\n          <ThinNavbarSocials>\r\n            <ThinNavbarSocial>\r\n              <a href={URL_LINKEDIN} target=\"_blank\" rel=\"noreferrer\">\r\n                <i className=\"fa fa-linkedin\"></i>\r\n              </a>\r\n            </ThinNavbarSocial>\r\n            <ThinNavbarSocial>\r\n              <a href={URL_GITHUB} target=\"_blank\" rel=\"noreferrer\">\r\n                <i className=\"fa fa-github\"></i>\r\n              </a>\r\n            </ThinNavbarSocial>\r\n            <ThinNavbarSocial>\r\n              <a href={URL_CODEPEN} target=\"_blank\" rel=\"noreferrer\">\r\n                <i className=\"fa fa-codepen\"></i>\r\n              </a>\r\n            </ThinNavbarSocial>\r\n          </ThinNavbarSocials>\r\n        </ThinNavbarMenu>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ThinNavbar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const WideNavbarNav = styled.nav``;\r\n\r\nexport const WideNavbarItem = styled.a`\r\n  font: ${({ theme }) => theme.fontText};\r\n  color: black;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  margin-right: 1.5rem;\r\n\r\n  &:last-child {\r\n    margin-right: 0;\r\n  }\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.colorPrimary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { AppContext } from \"../../App\";\r\nimport { PrimaryButton } from \"../../styles/AppStyles\";\r\nimport { WideNavbarItem, WideNavbarNav } from \"./WideNavbarStyles\";\r\n\r\n/**\r\n * Represents site navigation for the portfolio.\r\n */\r\nconst WideNavbar: React.FC = () => {\r\n  const { setRenderContactForm } = React.useContext(AppContext);\r\n\r\n  return (\r\n    <WideNavbarNav>\r\n      <WideNavbarItem href=\"#aboutme\">About Me</WideNavbarItem>\r\n      <WideNavbarItem className=\"hide-on-hoverless\" href=\"#work\">Work</WideNavbarItem>\r\n      <WideNavbarItem className=\"hide-on-hoverless\" href=\"#playground\">Playground</WideNavbarItem>\r\n      <PrimaryButton onClick={() => setRenderContactForm!(true)}>\r\n        Contact\r\n      </PrimaryButton>\r\n    </WideNavbarNav>\r\n  );\r\n};\r\n\r\nexport default WideNavbar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HeaderContainer = styled.header`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  padding: 0.75rem 2rem 0.75rem 0.75rem;\r\n  /* background: white; */\r\n  /* border-bottom: 1px solid black; */\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n\r\n  font: ${({ theme }) => theme.fontText};\r\n  z-index: 10;\r\n`;\r\n\r\nexport const HeaderHome = styled.a`\r\n  font: ${({ theme }) => theme.fontTitle};\r\n  color: black;\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  font-size: 1.5rem;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ThinNavbar from \"../Navbar/ThinNavbar\";\r\nimport WideNavbar from \"../Navbar/WideNavbar\";\r\nimport { HeaderContainer, HeaderHome } from \"./HeaderStyles\";\r\n\r\nconst navbarMediaQuery = window.matchMedia(\"(min-width: 768px)\");\r\n\r\n/**\r\n * Represents the header of the portfolio.\r\n */\r\nconst Header: React.FC = () => {\r\n  const [isThinScreen, setIsThinScreen] = useState(navbarMediaQuery.matches);\r\n\r\n  useEffect(() => {\r\n    navbarMediaQuery.addEventListener(\"change\", () => {\r\n      setIsThinScreen(navbarMediaQuery.matches);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <HeaderHome href=\"/\">Jared Jones</HeaderHome>\r\n      {isThinScreen ? <WideNavbar /> : <ThinNavbar />}\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HeroContainer = styled.section`\r\n  position: relative;\r\n  height: 100vh;\r\n  /* background-color: ${({ theme }) => theme.colorBackgroundDark}; */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const LandingTitle = styled.h1`\r\n  font: ${({ theme }) => theme.fontDecor};\r\n  font-weight: 600;\r\n  font-size: 5rem;\r\n  color: transparent;\r\n  margin-left: 10%;\r\n  /* text-shadow: ${({ theme }) => theme.textShadow}; */\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    font-size: 7rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1024px) {\r\n    font-size: 10rem;\r\n  }\r\n\r\n  // Background animated mesh gradient.\r\n  background-image: url(\"/assets/gradients/mesh-2.png\");\r\n  background-repeat: no-repeat;\r\n  background-size: 200%;\r\n  background-clip: text;\r\n  -webkit-background-clip: text;\r\n\r\n  animation: titleMeshAnim 10s cubic-bezier(0.77, 0, 0.175, 1) 2s infinite;\r\n\r\n  @keyframes titleMeshAnim {\r\n    0% {\r\n      background-position: 5% 5%;\r\n    }\r\n    25% {\r\n      background-position: 5% 95%;\r\n      background-size: 250%;\r\n    }\r\n    50% {\r\n      background-position: 95% 95%;\r\n      background-size: 150%;\r\n    }\r\n    75% {\r\n      background-position: 5% 95%;\r\n    }\r\n    100% {\r\n      background-position: 5% 5%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LandingSubtitle = styled.p`\r\n  font: ${({ theme }) => theme.fontSubtitle};\r\n  color: white;\r\n`;\r\n","import React from \"react\";\r\nimport FloatingObjects from \"../FloatingObjects/FloatingObjects\";\r\nimport { HeroContainer, LandingSubtitle, LandingTitle } from \"./HeroStyles\";\r\n\r\n/**\r\n * Represents the hero section of the portfolio.\r\n */\r\nconst Hero = () => {\r\n  return (\r\n    <HeroContainer>\r\n      <LandingTitle>\r\n        Hi there,\r\n        <br />\r\n        I'm Jared.\r\n      </LandingTitle>\r\n    </HeroContainer>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import styled from \"styled-components\";\r\n\r\nconst PLAYGROUND_CARD_BORDER_RADIUS = \"3rem\";\r\n\r\nexport const PlaygroundContainer = styled.section`\r\n  margin-bottom: ${({ theme }) => theme.sectionSpacerHeight};\r\n`;\r\n\r\nexport const PlaygroundGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(1, 1fr);\r\n\r\n  @media only screen and (min-width: 480px) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n    padding: 0 10vw;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n    padding: 0 20vw;\r\n  }\r\n\r\n  @media only screen and (min-width: 1024px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    padding: 0 10vw;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n`;\r\n\r\n/* ================================================================\r\n * Playground Cards\r\n */\r\n\r\nexport const PlaygroundCard = styled.article<{ imageSrc: string }>`\r\n  position: relative;\r\n  margin: 0 3rem 3rem 3rem;\r\n  aspect-ratio: 1 / 1;\r\n  border-radius: ${PLAYGROUND_CARD_BORDER_RADIUS};\r\n\r\n  background-image: url(${({ imageSrc }) => imageSrc});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n\r\n  box-shadow: ${({ theme }) => theme.boxShadow};\r\n  color: white;\r\n`;\r\n\r\nexport const PlaygroundCardBackgroundMask = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 25%);\r\n  border-radius: ${PLAYGROUND_CARD_BORDER_RADIUS};\r\n`;\r\n\r\nexport const PlaygroundCardHeader = styled.header`\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  margin: 2rem;\r\n`;\r\n\r\nexport const PlaygroundCardTitle = styled.h3`\r\n  font: ${({ theme }) => theme.fontSubtitle};\r\n  text-transform: uppercase;\r\n  font-size: 2rem;\r\n`;\r\n\r\nexport const PlaygroundCardLinks = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 1.5rem;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n`;\r\n\r\nexport const PlaygroundCardLink = styled.li`\r\n  display: inline-block;\r\n  margin-right: 1rem;\r\n  text-decoration: none;\r\n  font-size: 2.5rem;\r\n  transition: font-size 100ms;\r\n  vertical-align: top;\r\n\r\n  & a {\r\n    color: white;\r\n  }\r\n\r\n  @media only screen and (hover: hover) {\r\n    &:hover {\r\n      font-size: 3rem;\r\n    }\r\n  }\r\n\r\n  &:last-child {\r\n    margin-right: 0;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport {\r\n  PlaygroundCard,\r\n  PlaygroundCardBackgroundMask,\r\n  PlaygroundCardHeader,\r\n  PlaygroundCardLink,\r\n  PlaygroundCardLinks,\r\n  PlaygroundCardTitle,\r\n} from \"./PlaygroundStyles\";\r\nimport { PlayItem } from \"../../models/PlayItems\";\r\n\r\nconst hoverMediaQuery = window.matchMedia(\"(hover: hover)\");\r\n\r\nexport interface PlayCardProps {\r\n  // The item to display.\r\n  item: PlayItem;\r\n}\r\n\r\n/**\r\n * Represents the display for a single play item.\r\n */\r\nconst PlayCard: React.FC<PlayCardProps> = ({ item }) => {\r\n  const [canHover, setCanHover] = useState(hoverMediaQuery.matches);\r\n\r\n  useEffect(() => {\r\n    hoverMediaQuery.addEventListener(\"change\", () => {\r\n      setCanHover(hoverMediaQuery.matches);\r\n    });\r\n  }, []);\r\n\r\n  const card = (\r\n    <PlaygroundCard imageSrc={item.thumbnailSrc}>\r\n      <PlaygroundCardBackgroundMask />\r\n      <PlaygroundCardHeader>\r\n        <PlaygroundCardTitle>{item.title}</PlaygroundCardTitle>\r\n      </PlaygroundCardHeader>\r\n      <PlaygroundCardLinks>\r\n        {item.codepenLink && (\r\n          <PlaygroundCardLink>\r\n            <a href={item.codepenLink} target=\"_blank\" rel=\"noreferrer\">\r\n              {<i className=\"fab fa-codepen\"></i>}\r\n            </a>\r\n          </PlaygroundCardLink>\r\n        )}\r\n        {item.githubLink && (\r\n          <PlaygroundCardLink>\r\n            <a href={item.githubLink} target=\"_blank\" rel=\"noreferrer\">\r\n              {<i className=\"fab fa-github\"></i>}\r\n            </a>\r\n          </PlaygroundCardLink>\r\n        )}\r\n      </PlaygroundCardLinks>\r\n    </PlaygroundCard>\r\n  );\r\n\r\n  return canHover ? <Tilt options={{ scale: 1.1 }}>{card}</Tilt> : card;\r\n};\r\n\r\nexport default PlayCard;\r\n","/**\r\n * Defines the information an experiment/playground item should have.\r\n */\r\nexport interface PlayItem {\r\n  /** A title for the item. */\r\n  title: string;\r\n  /** A time or time period for the item. */\r\n  time: string;\r\n  /** A URL to a thumbnail image. */\r\n  thumbnailSrc: string;\r\n  /** URLs to more images. */\r\n  gallerySrcs?: string[];\r\n  /** Some tags describing the item. */\r\n  tags: string[];\r\n  /** A summary of the item. */\r\n  description: string;\r\n  /** A URL for a CodePen project for the item. */\r\n  codepenLink?: string;\r\n  /** A URL for a GitHub repo for the item. */\r\n  githubLink?: string;\r\n}\r\n\r\n/**\r\n * Data for the Playground section of the portfolio.\r\n */\r\nexport const PLAY_ITEMS: PlayItem[] = [\r\n  {\r\n    title: \"Shining Text\",\r\n    time: \"2021\",\r\n    thumbnailSrc: \"/assets/experiments/ShiningText.gif\",\r\n    gallerySrcs: [],\r\n    description: `Learning how to use three.js with textures and shaders.`,\r\n    tags: [\"TypeScript\", \"Vite\", \"three.js\", \"shaders\"],\r\n    codepenLink: \"https://codepen.io/jaredcj/full/ZEKBmMQ\",\r\n    githubLink: \"https://github.com/jjones-99/shining-text\",\r\n  },\r\n  {\r\n    title: \"These Cards\",\r\n    time: \"2021\",\r\n    thumbnailSrc: \"/assets/experiments/ProjectCards.gif\",\r\n    gallerySrcs: [],\r\n    description: `Designing/developing cards with HTML/CSS to represent experiments on my portfolio site.`,\r\n    tags: [\"TypeScript\", \"React\", \"three.js\"],\r\n    codepenLink: \"https://codepen.io/jaredcj/full/mdmKdQB\",\r\n  },\r\n  {\r\n    title: \"Contact Card\",\r\n    time: \"2021\",\r\n    thumbnailSrc: \"/assets/experiments/ContactCard.png\",\r\n    gallerySrcs: [],\r\n    description: `A glassmorphism contact card created with HTML and CSS.`,\r\n    tags: [\"Glassmorphism\"],\r\n    codepenLink: \"https://codepen.io/jaredcj/full/zYwmeRK\",\r\n  },\r\n  {\r\n    title: \"Floating Objects\",\r\n    time: \"2021\",\r\n    thumbnailSrc: \"/assets/experiments/FloatingObjects.gif\",\r\n    gallerySrcs: [],\r\n    description: `A simple method of creating objects that animate and follow the cursor.`,\r\n    tags: [\"GSAP\"],\r\n    codepenLink: \"https://codepen.io/jaredcj/full/KKmBWpb\",\r\n  },\r\n  // {\r\n  //   title: \"Icon Field\",\r\n  //   time: \"2021\",\r\n  //   thumbnailSrc: \"\",\r\n  //   gallerySrcs: [],\r\n  //   description: `Experimenting with using three.js in React with three dimensions.`,\r\n  //   tags: [\"TypeScript\", \"React\", \"three.js\"],\r\n  //   codepenLink: \"cpif\",\r\n  //   githubLink: \"\",\r\n  // },\r\n];\r\n","import React from \"react\";\r\nimport { PlaygroundContainer, PlaygroundGrid } from \"./PlaygroundStyles\";\r\nimport PlayCard from \"./PlayCard\";\r\nimport { PLAY_ITEMS } from \"../../models/PlayItems\";\r\nimport { SectionHeader, SectionSubtitle, SectionTitle } from \"../../styles/AppStyles\";\r\n\r\n/**\r\n * Represents the playground section of the portfolio.\r\n * @returns The component.\r\n */\r\nconst Playground = () => {\r\n  return (\r\n    <PlaygroundContainer id=\"playground\" className=\"hide-on-hoverless\">\r\n        <SectionHeader>\r\n          <SectionSubtitle>Playground</SectionSubtitle>\r\n          <SectionTitle>Recent Experiments</SectionTitle>\r\n        </SectionHeader>\r\n      <PlaygroundGrid>\r\n        {PLAY_ITEMS.map((item) => (\r\n          <PlayCard item={item} key={item.title} />\r\n        ))}\r\n      </PlaygroundGrid>\r\n    </PlaygroundContainer>\r\n  );\r\n};\r\n\r\nexport default Playground;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PreloaderDiv = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  background: black;\r\n  color: white;\r\n`;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { PreloaderDiv } from \"./PreloaderStyles\";\r\n\r\nconst TIMED_REVEAL_DELAY = 3000;\r\n\r\ninterface PreloaderProps {\r\n  clearPreloader: () => void;\r\n}\r\n\r\n/**\r\n * Represents a preloader component for pages on the site.\r\n * NOTE: At the moment, this runs off of time, not dynamic loading.\r\n */\r\nconst Preloader: React.FC<PreloaderProps> = ({ clearPreloader }) => {\r\n  const interval = useRef<number | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    interval.current = window.setInterval(clearPreloader, TIMED_REVEAL_DELAY);\r\n\r\n    return () => window.clearInterval(interval.current);\r\n  }, []);\r\n\r\n  return (\r\n    <PreloaderDiv>\r\n      <h1>Hi there.</h1>\r\n    </PreloaderDiv>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import styled from \"styled-components\";\r\n\r\nexport const WorkContainer = styled.section`\r\n  margin-bottom: ${({ theme }) => theme.sectionSpacerHeight};\r\n`;\r\n\r\nexport const WorkCardGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(1, 1fr);\r\n  padding: 0 5%;\r\n\r\n  @media only screen and (min-width: 480px) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    padding: 0 5%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1024px) {\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 0 20%;\r\n  }\r\n`;\r\n\r\nexport const WorkCardContainer = styled.article<{ imageSrc: string }>`\r\n  position: relative;\r\n  margin: 0 1.5rem 1.5rem 1.5rem;\r\n  aspect-ratio: 4 / 3;\r\n  border-radius: 0.5rem;\r\n\r\n  background-color: ${({ theme }) => theme.colorCardBackground};\r\n  background-image: url(${({ imageSrc }) => imageSrc});\r\n  background-size: cover;\r\n  background-position: center;\r\n\r\n  box-shadow: ${({ theme }) => theme.boxShadow};\r\n\r\n  &::before {\r\n    content: \"\";\r\n    background: ${({ theme }) => theme.colorPrimary};\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    border-radius: 0.5rem;\r\n    opacity: 0;\r\n    transition: opacity 500ms ease-in-out;\r\n  }\r\n\r\n  & > * {\r\n    opacity: 0;\r\n    transition: opacity 500ms ease-in-out;\r\n  }\r\n\r\n  &:hover {\r\n    &::before,\r\n    & > * {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  @media (hover: none) {\r\n    &::before,\r\n    & * {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WorkCardCorner = styled.div`\r\n  /* display: none; */\r\n  position: absolute;\r\n  top: -0.3rem;\r\n  left: -0.5rem;\r\n  font: ${({ theme }) => theme.fontDecor};\r\n  color: white;\r\n  font-size: 1rem;\r\n  text-shadow: ${({ theme }) => theme.textShadow};\r\n\r\n  @media only screen and (min-width: 480px) {\r\n    display: block;\r\n    top: -0.2em;\r\n    left: -0.5em;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const WorkCardContent = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 4em 4em;\r\n\r\n  color: white;\r\n`;\r\n\r\nexport const WorkCardHeader = styled.header`\r\n  font: ${({ theme }) => theme.fontSubtitle};\r\n  text-align: center;\r\n`;\r\n\r\nexport const WorkCardTitle = styled.h3`\r\n  font: ${({ theme }) => theme.fontTitle};\r\n  font-size: 1rem;\r\n  text-align: right;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const WorkCardBody = styled.p`\r\n  font: ${({ theme }) => theme.fontSubtitle};\r\n  font-size: 1.2rem;\r\n  text-align: center;\r\n`;\r\n\r\nexport const WorkDetailsCard = styled.article`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 1000;\r\n\r\n  background-color: ${({ theme }) => theme.colorCardBackground};\r\n  border-radius: 0.5rem;\r\n  margin: 20vh 10vw;\r\n  padding: 1rem 2rem;\r\n\r\n  overflow-y: scroll;\r\n\r\n  color: white;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    margin: 20vh 15vw;\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 0.5em;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background: none;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    border-radius: 0.5em;\r\n  }\r\n`;\r\n\r\nexport const WorkDetailsHeader = styled.header`\r\n  width: 100%;\r\n  align-items: top;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const WorkDetailsTitle = styled.h3`\r\n  font: ${({ theme }) => theme.fontTitle};\r\n  font-size: 1.5rem;\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const WorkDetailsBody = styled.p`\r\n  font: ${({ theme }) => theme.fontSubtitle};\r\n  font-size: 1rem;\r\n  white-space: pre-wrap;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { IconButton, PrimaryButton, PrimaryButtonLink } from \"../../styles/AppStyles\";\r\nimport { setOverlayOpacity, toggleBodyScrolling } from \"../../utils/helpers\";\r\nimport { WorkItem } from \"../../models/WorkItems\";\r\nimport {\r\n  WorkCardBody,\r\n  WorkCardContainer,\r\n  WorkCardContent,\r\n  WorkDetailsBody,\r\n  WorkDetailsCard,\r\n  WorkDetailsHeader,\r\n  WorkDetailsTitle,\r\n} from \"./WorkStyles\";\r\n\r\nexport interface WorkCardProps {\r\n  // The item to display.\r\n  item: WorkItem;\r\n}\r\n\r\n/**\r\n * Represents the display for a single item of work.\r\n * Renders as a card.\r\n */\r\nconst WorkCard: React.FC<WorkCardProps> = ({ item }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    toggleBodyScrolling(!showModal);\r\n    setOverlayOpacity(showModal ? \"50%\" : \"0\");\r\n  }, [showModal]);\r\n\r\n  const moreDetails = (\r\n    <WorkDetailsCard className=\"\">\r\n      <WorkDetailsHeader>\r\n        <WorkDetailsTitle>{item.title}</WorkDetailsTitle>\r\n        <IconButton onClick={() => setShowModal(false)}>\r\n          <i className=\"fa fa-close\"></i>\r\n        </IconButton>\r\n      </WorkDetailsHeader>\r\n      <WorkDetailsBody>{item.summary}</WorkDetailsBody>\r\n    </WorkDetailsCard>\r\n  );\r\n\r\n  const buttonOption = item.buttonLink ? (\r\n    <PrimaryButtonLink light={true} href={item.buttonLink} target=\"_blank\" rel=\"no-referrer\">\r\n      Visit Website\r\n    </PrimaryButtonLink>\r\n  ) : (\r\n    <PrimaryButton light={true} onClick={() => setShowModal(true)}>\r\n      Read More\r\n    </PrimaryButton>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <WorkCardContainer imageSrc={item.thumbnailSrc}>\r\n        <WorkCardContent>\r\n          {/* <WorkCardHeader>\r\n            {item.time}\r\n            <WorkCardTitle>{item.title}</WorkCardTitle>\r\n          </WorkCardHeader> */}\r\n          <WorkCardBody>{item.hook}</WorkCardBody>\r\n          {buttonOption}\r\n        </WorkCardContent>\r\n      </WorkCardContainer>\r\n      {showModal && moreDetails}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkCard;\r\n","/**\r\n * Defines the information a work experience item should have.\r\n */\r\nexport interface WorkItem {\r\n  /** A title for the item. */\r\n  title: string;\r\n  /** The name of the role/position during the item. */\r\n  role: string;\r\n  /** A time or time period for the item. */\r\n  time: string;\r\n  /** A URL to a thumbnail image. */\r\n  thumbnailSrc: string;\r\n  /** URLs to more images. */\r\n  gallerySrcs: string[];\r\n  /** Some tags describing the item. */\r\n  tags: string[];\r\n  /** A short tagline for the item. */\r\n  hook: string;\r\n  /** A more detailed summary of the item. */\r\n  summary: string;\r\n  /** A URL for a live demo. e.g. the company's site, CodePen, etc. */\r\n  demoLink?: string;\r\n  /** A URL for a GitHub repo for the item. */\r\n  githubLink?: string;\r\n  /** The URL that the \"more\" button should link to. */\r\n  buttonLink?: string;\r\n}\r\n\r\n/**\r\n * Data for the Experience section of the portfolio.\r\n */\r\nexport const WORK_ITEMS: WorkItem[] = [\r\n  {\r\n    title: \"Dennis Group\",\r\n    role: \"Full Stack Developer\",\r\n    time: \"2020 - Present\",\r\n    thumbnailSrc: \"/assets/work/DGLogo.png\",\r\n    gallerySrcs: [],\r\n    hook: \"The #1 food and beverage design-build firm in the US.\",\r\n    summary: `Working at Dennis Group was a great experience to self-study a variety of technologies. Our main development was Classic SharePoint Online, building platforms for our CRM, project and contract management, and document sharing, alongside our intranet. I also developed with Modern SharePoint Online, creating SPFx web parts and extensions using TypeScript and React.\\n\\nThis work was beneficial to our employees in organizing resources, communicating with clients and contractors, and collecting data about contracts and finances.`,\r\n    tags: [\"TypeScript\", \"HTML\", \"SCSS\", \"SharePoint\", \"React\", \"Node\", \"Express\"],\r\n    buttonLink: \"https://www.dennisgroup.com\",\r\n  },\r\n  {\r\n    title: \"Startup Victoria\",\r\n    role: \"Digital Content and Community Coordinator\",\r\n    time: \"2019\",\r\n    thumbnailSrc: \"/assets/work/SVLogo.png\",\r\n    gallerySrcs: [],\r\n    hook: \"A Melbourne not-for-profit community focused on founders.\",\r\n    summary: `During my internship working at Startup Victoria, I maintained, moderated, and developed new functionality for their community website, while improving the professional quality of the public site. This involved a great deal of fixing bugs in function and style, so it was a great exercise in triage and the Jobs to be Done theory.\\n\\nI was the only developer in the small team, so I had more responsibility and ownership of the project. There's some of my work on every page. I did front-side work with styles and design as well as back-side work with creating addons to improve the moderation of the content.\\n\\nBecause I was doing a lot of work on a lot of different sectors—and using technology I hadn't any experience with—it was a great opportunity to take my own time teaching myself more about the tools I had in order to enhance my work.`,\r\n    tags: [\"WordPress\", \"HTML\", \"PHP\", \"CSS\", \"JavaScript\"],\r\n    demoLink: \"https://startupvictoria.com.au\",\r\n    buttonLink: \"https://startupvictoria.com.au\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport {\r\n  ContentContainer,\r\n  SectionHeader,\r\n  SectionSubtitle,\r\n  SectionTitle,\r\n} from \"../../styles/AppStyles\";\r\nimport WorkCard from \"./WorkCard\";\r\nimport { WORK_ITEMS } from \"../../models/WorkItems\";\r\nimport { WorkCardGrid, WorkContainer } from \"./WorkStyles\";\r\n\r\n/**\r\n * Represents the work section of the portfolio.\r\n */\r\nconst Work = () => {\r\n  return (\r\n    <WorkContainer id=\"work\" className=\"hide-on-hoverless\">\r\n      <SectionHeader>\r\n        <SectionSubtitle>Projects</SectionSubtitle>\r\n        <SectionTitle>Recent Work</SectionTitle>\r\n      </SectionHeader>\r\n      <WorkCardGrid>\r\n        {WORK_ITEMS.map((item) => (\r\n          <WorkCard item={item} key={item.title} />\r\n        ))}\r\n      </WorkCardGrid>\r\n    </WorkContainer>\r\n  );\r\n};\r\n\r\nexport default Work;\r\n","// Reused constants.\r\nconst FONT_FAMILY_PRIMARY = '\"Spartan\", sans-serif';\r\nconst FONT_FAMILY_SECONDARY = '\"Roboto Slab\", serif';\r\nconst COLOR_PRIMARY_LIGHT = `hsl(261, 92%, 70%)`;\r\nconst COLOR_PRIMARY = \"hsl(261, 49%, 55%)\";\r\nconst COLOR_PRIMARY_DARK = \"hsl(261, 40%, 41%)\";\r\n\r\n// The bars that stretch the screen and animate with the mouse.\r\nexport const BARS = [\r\n  { color: COLOR_PRIMARY_LIGHT, size: \"18rem\" },\r\n  { color: COLOR_PRIMARY, size: \"14rem\" },\r\n  { color: COLOR_PRIMARY_DARK, size: \"8rem\" },\r\n];\r\n\r\n// The theme to use with styled components.\r\nexport const theme = {\r\n  // ========== Colors ==========\r\n\r\n  colorPrimary: COLOR_PRIMARY,\r\n  colorPrimaryLight: COLOR_PRIMARY_LIGHT,\r\n  colorPrimaryDark: COLOR_PRIMARY_DARK,\r\n\r\n  colorTitle: \"hsl(0, 0%, 0%)\",\r\n  colorSubtitle: \"hsl(0, 0%, 50%)\",\r\n  colorText: \"hsl(0, 0%, 0%)\",\r\n  colorEmphasis: COLOR_PRIMARY,\r\n  colorMuted: \"hsl(0, 0%, 83%)\",\r\n\r\n  colorBackgroundDark: \"hsl(0, 0%, 17%)\",\r\n  colorBackgroundLight: \"hsl(0, 0%, 87%)\",\r\n\r\n  colorMenuBackground: COLOR_PRIMARY,\r\n  colorCardBackground: COLOR_PRIMARY,\r\n\r\n  // ========= Fonts =========\r\n\r\n  fontTitle: `400 1em ${FONT_FAMILY_SECONDARY}`,\r\n  fontSubtitle: `400 1em ${FONT_FAMILY_PRIMARY}`,\r\n  fontText: `400 1em ${FONT_FAMILY_PRIMARY}`,\r\n  fontMuted: `400 1em ${FONT_FAMILY_PRIMARY}`,\r\n  fontAside: `400 1em ${FONT_FAMILY_SECONDARY}`,\r\n  fontButton: `600 1em ${FONT_FAMILY_PRIMARY}`,\r\n  fontDecor: `400 1em ${FONT_FAMILY_PRIMARY}`,\r\n\r\n  // ========== Sizing ==========\r\n\r\n  sectionSpacerHeight: \"8rem\",\r\n\r\n  // ========== Effects ==========\r\n\r\n  boxShadow: `1rem 1rem 2rem rgba(0, 0, 0, 0.5)`,\r\n  textShadow: `5px 5px 11px rgba(0, 0, 0, 0.7)`,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ParticleBackgroundWrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  height: 0;\r\n  z-index: -1;\r\n`;","import React from \"react\";\r\nimport Particles, { IOptions, RecursivePartial } from \"react-tsparticles\";\r\nimport { ParticleBackgroundWrapper } from \"./ParticleStyles\";\r\n\r\nconst PARTICLE_OPTIONS: RecursivePartial<IOptions> = {\r\n  fpsLimit: 60,\r\n  particles: {\r\n    color: {\r\n      value: \"#297c67\",\r\n    },\r\n    links: {\r\n      enable: false,\r\n    },\r\n    move: {\r\n      direction: \"none\",\r\n      enable: true,\r\n      outMode: \"bounce\",\r\n      random: false,\r\n      speed: 0.7,\r\n      straight: false,\r\n    },\r\n    number: {\r\n      density: {\r\n        enable: true,\r\n        value_area: 800,\r\n      },\r\n      value: 70,\r\n    },\r\n    opacity: {\r\n      value: 0.5,\r\n    },\r\n    shape: {\r\n      type: \"circle\",\r\n    },\r\n    size: {\r\n      random: true,\r\n      value: 3,\r\n    },\r\n  },\r\n  detectRetina: true,\r\n};\r\n\r\nconst ParticleBackground = () => {\r\n  return (\r\n    <ParticleBackgroundWrapper>\r\n      <Particles style={{ height: \"100%\" }} options={PARTICLE_OPTIONS} />\r\n    </ParticleBackgroundWrapper>\r\n  );\r\n};\r\n\r\nexport default ParticleBackground;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AboutMeContainer = styled.section`\r\n  min-height: 40vh;\r\n  padding-top: 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: ${({theme}) => theme.sectionSpacerHeight};\r\n`;\r\n\r\nexport const AboutMeMain = styled.article`\r\n  width: 80%;\r\n  background-color: white;\r\n  border-radius: 2rem;\r\n  font: ${({ theme }) => theme.fontText};\r\n  box-shadow: ${({ theme }) => theme.boxShadow};\r\n\r\n  @media only screen and (min-width: 480px) {\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n  }\r\n\r\n  @media only screen and (min-width: 1024px) {\r\n    width: 90%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n  }\r\n`;\r\n\r\nexport const AboutMeBody = styled.section`\r\n  padding: 2rem;\r\n  border-radius: 2rem 2rem 0 0;\r\n  background-color: ${({ theme }) => theme.colorPrimary};\r\n  text-align: center;\r\n  color: white;\r\n`;\r\n\r\nexport const AboutMeSections = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const AboutMeSection = styled.section`\r\n  position: relative;\r\n  padding: 2rem;\r\n  text-align: center;\r\n  width: 100%;\r\n\r\n  &:before {\r\n    --border-width: 50%;\r\n    content: \"\";\r\n    position: absolute;\r\n    left: calc(var(--border-width) / 2);\r\n    bottom: 0;\r\n    height: 1px;\r\n    width: var(--border-width);\r\n    border-bottom: 2px solid lightgray;\r\n  }\r\n\r\n  &:last-child:before {\r\n    border-bottom: none;\r\n  }\r\n\r\n  @media only screen and (min-width: 1024px) {\r\n    width: calc(100% / 3);\r\n\r\n    &:before {\r\n      border-bottom: none;\r\n    }\r\n\r\n    &:after {\r\n      --border-width: 50%;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: calc(var(--border-width) / 2);\r\n      right: 0;\r\n      width: 1px;\r\n      height: var(--border-width);\r\n      border-right: 2px solid lightgray;\r\n    }\r\n\r\n    &:last-child:after {\r\n      border-right: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AboutMeHeader = styled.h5``;\r\n\r\nexport const AboutMeTopic = styled.h6`\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const AboutMeInfo = styled.p``;\r\n\r\nexport const AboutMeList = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport const AboutMeListItem = styled.li``;\r\n","import React from \"react\";\r\nimport { PrimaryButtonLink } from \"../../styles/AppStyles\";\r\nimport { URL_RESUME } from \"../../utils/constants\";\r\nimport {\r\n  AboutMeBody,\r\n  AboutMeContainer,\r\n  AboutMeHeader,\r\n  AboutMeInfo,\r\n  AboutMeList,\r\n  AboutMeListItem,\r\n  AboutMeMain,\r\n  AboutMeSection,\r\n  AboutMeSections,\r\n  AboutMeTopic,\r\n} from \"./AboutMeStyles\";\r\n\r\nconst AboutMe = () => {\r\n  return (\r\n    <AboutMeContainer id=\"aboutme\">\r\n      <AboutMeMain>\r\n        <AboutMeBody>\r\n          <p>\r\n            I'm passionate about tidy code and design. Maintainable work improves productivity and\r\n            positivity.\r\n          </p>\r\n          <p>\r\n            I'm always looking to learn more about what I don't know and improve upon what I do.\r\n          </p>\r\n          <br />\r\n          <PrimaryButtonLink light={true} href={URL_RESUME} target=\"_blank\">\r\n            View my resume\r\n          </PrimaryButtonLink>\r\n        </AboutMeBody>\r\n        <AboutMeSections>\r\n          <AboutMeSection>\r\n            <AboutMeHeader>Front-end developer</AboutMeHeader>\r\n            <AboutMeTopic>Languages I speak</AboutMeTopic>\r\n            <AboutMeInfo>HTML, CSS, SCSS, JavaScript, TypeScript</AboutMeInfo>\r\n            <AboutMeTopic>Tools I know</AboutMeTopic>\r\n            <AboutMeInfo>\r\n              React, Angular, three.js, GSAP, Bootstrap, Tailwind, GitHub, SharePoint, WordPress\r\n            </AboutMeInfo>\r\n          </AboutMeSection>\r\n          <AboutMeSection>\r\n            <AboutMeHeader>Back-end developer</AboutMeHeader>\r\n            <AboutMeTopic>Languages I speak</AboutMeTopic>\r\n            <AboutMeInfo>Java, JavaScript, C, C++, Python</AboutMeInfo>\r\n            <AboutMeTopic>Tools I know</AboutMeTopic>\r\n            <AboutMeInfo>Node.js, SQL, NoSQL, JPA, RESTful</AboutMeInfo>\r\n          </AboutMeSection>\r\n          <AboutMeSection>\r\n            <AboutMeHeader>Designer</AboutMeHeader>\r\n            <AboutMeInfo>\r\n              This section is still under construction! I don't yet have a lot of experience with\r\n              design, and I'm learning more constantly.\r\n            </AboutMeInfo>\r\n            <AboutMeTopic>Tools I know</AboutMeTopic>\r\n            <AboutMeInfo>Adobe XD, Figma</AboutMeInfo>\r\n          </AboutMeSection>\r\n        </AboutMeSections>\r\n      </AboutMeMain>\r\n    </AboutMeContainer>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactFormContainer = styled.div<{ visible: boolean }>`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 1000;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: \"Spartan\", sans-serif;\r\n  font-size: 1.2rem;\r\n\r\n  opacity: ${({ visible }) => (visible ? \"1\" : \"0\")};\r\n  pointer-events: ${({ visible }) => (visible ? \"\" : \"none\")};\r\n`;\r\n\r\nexport const ContactFormElement = styled.form``;\r\n\r\nexport const ContactFormHeader = styled.header`\r\n  padding: 0rem 1rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n\r\n  h1 {\r\n    color: rgb(40, 40, 40);\r\n    margin-top: 0;\r\n    font-size: 1.5em;\r\n  }\r\n`;\r\n\r\nexport const ContactFormFieldset = styled.fieldset`\r\n  border: none;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nexport const ContactFormRow = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ContactFormField = styled.div`\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem 1rem;\r\n`;\r\n\r\nexport const ContactFormLabel = styled.label`\r\n  font-weight: 600;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const ContactFormInput = styled.input`\r\n  border: none;\r\n  border-radius: 0.25rem;\r\n  padding: 1rem;\r\n  font-size: 1em;\r\n  font-family: \"Spartan\", sans-serif;\r\n  outline: none;\r\n  max-width: 50vw;\r\n`;\r\n\r\nexport const ContactFormTextarea = styled.textarea`\r\n  border: none;\r\n  border-radius: 0.25rem;\r\n  padding: 1rem;\r\n  font-size: 1em;\r\n  font-family: \"Spartan\", sans-serif;\r\n  min-height: 8rem;\r\n  resize: none;\r\n  outline: none;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 7px;\r\n    background-color: lightgrey;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: black;\r\n  }\r\n\r\n  &::-webkit-resizer {\r\n    display: block;\r\n    max-width: 7px;\r\n    max-height: 7px;\r\n    border-top: 4px solid transparent;\r\n    border-left: 4px solid transparent;\r\n    border-right: 4px solid grey;\r\n    border-bottom: 4px solid grey;\r\n    border-radius: 0.25rem;\r\n    margin: 2px;\r\n  }\r\n`;\r\n\r\nexport const ContactFormFooter = styled.footer`\r\n  padding: 0rem 1rem;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const ContactFormBody = styled.p`\r\n  padding: 0rem 1rem;\r\n  color: rgb(40, 40, 40);\r\n`;\r\n\r\nexport const ContactFormCard = styled.div`\r\n  width: 80rem;\r\n  max-width: 80%;\r\n  margin: 0;\r\n  border-radius: 2rem;\r\n  padding: 2rem;\r\n\r\n  // https://glassmorphism.com\r\n  background: rgba(200, 200, 200, 0.25);\r\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\r\n  backdrop-filter: blur(20px);\r\n  -webkit-backdrop-filter: blur(20px);\r\n  border-radius: 10px;\r\n  border: 1px solid rgba(255, 255, 255, 0.18);\r\n\r\n  transform: translateY(-100px);\r\n  transition: transform 400ms ease-in-out;\r\n\r\n  &.form {\r\n    transform: translateY(0px);\r\n  }\r\n\r\n  &.thank-you {\r\n    transform: translateY(0px);\r\n  }\r\n`;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { AppContext } from \"../../App\";\r\nimport { IconButton, PrimaryButton } from \"../../styles/AppStyles\";\r\nimport {\r\n  ContactFormElement,\r\n  ContactFormField,\r\n  ContactFormFieldset,\r\n  ContactFormFooter,\r\n  ContactFormHeader,\r\n  ContactFormInput,\r\n  ContactFormLabel,\r\n  ContactFormRow,\r\n  ContactFormTextarea,\r\n} from \"./ContactStyles\";\r\n\r\nexport interface ContactFormProps {\r\n  onComplete: () => void;\r\n}\r\n\r\nconst ContactForm: React.FC<ContactFormProps> = (props) => {\r\n  const { setRenderContactForm } = React.useContext(AppContext);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n\r\n  const onContactSubmit = useCallback(\r\n    async (e: React.FormEvent) => {\r\n      e.preventDefault();\r\n\r\n      await fetch(\"https://formsubmit.co/ajax/ba7a1b8b84c4220e93fce7e05db3bd75\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          _subject: \"New inquiry from portfolio\",\r\n          _template: \"table\",\r\n          name: userName,\r\n          email: userEmail,\r\n          message: userMessage,\r\n        }),\r\n      });\r\n\r\n      props.onComplete();\r\n    },\r\n    [userName, userEmail, userMessage]\r\n  );\r\n\r\n  const thankYou = <div>Thanks!</div>;\r\n\r\n  return (\r\n    <ContactFormElement onSubmit={onContactSubmit}>\r\n      <ContactFormHeader>\r\n        <h1>I'd love to hear from you.</h1>\r\n        <IconButton type=\"button\" onClick={() => setRenderContactForm!(false)}>\r\n          <i className=\"fa fa-close\" />\r\n        </IconButton>\r\n      </ContactFormHeader>\r\n      <ContactFormFieldset>\r\n        <ContactFormRow>\r\n          <ContactFormField>\r\n            <ContactFormLabel htmlFor=\"nameContactFormInput\">Name&nbsp;*</ContactFormLabel>\r\n            <ContactFormInput\r\n              name=\"name\"\r\n              required\r\n              value={userName}\r\n              onChange={(e) => setUserName(e.target.value)}\r\n              id=\"nameContactFormInput\"\r\n              type=\"text\"\r\n            />\r\n          </ContactFormField>\r\n          <ContactFormField>\r\n            <ContactFormLabel htmlFor=\"emailContactFormInput\">Email&nbsp;*</ContactFormLabel>\r\n            <ContactFormInput\r\n              name=\"email\"\r\n              required\r\n              value={userEmail}\r\n              onChange={(e) => setUserEmail(e.target.value)}\r\n              id=\"emailContactFormInput\"\r\n              type=\"email\"\r\n            />\r\n          </ContactFormField>\r\n        </ContactFormRow>\r\n        <ContactFormField>\r\n          <ContactFormLabel htmlFor=\"messageContactFormInput\">Message&nbsp;*</ContactFormLabel>\r\n          <ContactFormTextarea\r\n            name=\"message\"\r\n            required\r\n            value={userMessage}\r\n            onChange={(e) => setUserMessage(e.target.value)}\r\n            id=\"messageContactFormInput\"\r\n          />\r\n        </ContactFormField>\r\n      </ContactFormFieldset>\r\n      <ContactFormFooter>\r\n        <PrimaryButton type=\"submit\">Submit</PrimaryButton>\r\n      </ContactFormFooter>\r\n      <input type=\"hidden\" name=\"_subject\" value=\"\" />\r\n      <input type=\"hidden\" name=\"_template\" value=\"\" />\r\n    </ContactFormElement>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport { AppContext } from \"../../App\";\r\nimport { IconButton } from \"../../styles/AppStyles\";\r\nimport { ContactFormBody, ContactFormHeader } from \"./ContactStyles\";\r\n\r\nconst ContactThankYou: React.FC = () => {\r\n  const { setRenderContactForm } = React.useContext(AppContext);\r\n\r\n  return (\r\n    <>\r\n      <ContactFormHeader>\r\n        <h1>Thanks for getting in touch.</h1>\r\n        <IconButton type=\"button\" onClick={() => setRenderContactForm!(false)}>\r\n          <i className=\"fa fa-close\" />\r\n        </IconButton>\r\n      </ContactFormHeader>\r\n      <ContactFormBody>I'll get back to you shortly.</ContactFormBody>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactThankYou;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { setOverlayOpacity, toggleBodyScrolling } from \"../../utils/helpers\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport {\r\n  ContactFormCard, ContactFormContainer\r\n} from \"./ContactStyles\";\r\nimport ContactThankYou from \"./ContactThankYou\";\r\n\r\nexport interface ContactFormProps {\r\n  renderContactForm: boolean;\r\n}\r\n\r\nconst Contact: React.FC<ContactFormProps> = (props) => {\r\n  const [renderThankYou, setRenderThankYou] = useState(false);\r\n\r\n  // Disable scrolling when the contact form is visible.\r\n  useEffect(() => {\r\n    toggleBodyScrolling(!props.renderContactForm);\r\n    setOverlayOpacity(props.renderContactForm ? \"10%\" : \"0\");\r\n    setRenderThankYou(false);\r\n  }, [props.renderContactForm]);\r\n\r\n  const cardClass = props.renderContactForm ? (renderThankYou ? \"thank-you\" : \"form\") : \"\";\r\n\r\n  return (\r\n    <ContactFormContainer visible={props.renderContactForm}>\r\n      <ContactFormCard className={cardClass}>\r\n        {renderThankYou ? (\r\n          <ContactThankYou />\r\n        ) : (\r\n          <ContactForm onComplete={() => setRenderThankYou(true)} />\r\n        )}\r\n      </ContactFormCard>\r\n    </ContactFormContainer>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useState } from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { ScreenOverlay } from \"./styles/AppStyles\";\r\nimport Cursor from \"./components/Cursor/Cursor\";\r\nimport FloatingObjects from \"./components/FloatingObjects/FloatingObjects\";\r\nimport { Bar } from \"./components/FloatingObjects/FloatingObjectsStyles\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Hero from \"./components/Hero/Hero\";\r\nimport Playground from \"./components/Playground/Playground\";\r\nimport Preloader from \"./components/Preloader/Preloader\";\r\nimport Work from \"./components/Work/Work\";\r\nimport { BARS, theme } from \"./styles/theme\";\r\nimport ParticleBackground from \"./components/Particles/ParticleBackground\";\r\nimport AboutMe from \"./components/AboutMe/AboutMe\";\r\nimport Contact from \"./components/Contact/Contact\";\r\n\r\nexport interface IAppContext {\r\n  setRenderContactForm?: (renderContactForm: boolean) => void;\r\n}\r\n\r\nexport const AppContext = React.createContext<IAppContext>({});\r\n\r\nfunction App() {\r\n  const [preloader, setPreloader] = useState(false);\r\n  const [renderContactForm, setRenderContactForm] = useState(false);\r\n\r\n  const defaultContext = {\r\n    setRenderContactForm,\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={defaultContext}>\r\n      <Cursor />\r\n\r\n      {preloader && <Preloader clearPreloader={() => setPreloader(false)} />}\r\n      {!preloader && (\r\n        <ThemeProvider theme={theme}>\r\n          <ScreenOverlay id=\"mainOverlay\" />\r\n          <Contact renderContactForm={renderContactForm} />\r\n          <ParticleBackground />\r\n          <Header />\r\n          <Hero />\r\n          <AboutMe />\r\n          <Work />\r\n          <Playground />\r\n          <Footer />\r\n        </ThemeProvider>\r\n      )}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"tailwindcss/tailwind.css\"\r\nimport \"./styles/index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}